# yamllint disable-line rule:line-length
# SPDX-FileCopyrightText: 2023 - 2025 Benjamin Grande M. S. <ben.grande.b@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

---
name: Lint

# yamllint disable-line rule:truthy
on:
  # yamllint disable-line rule:empty-values
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  group: ci-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  lint:
    strategy:
      fail-fast: false
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: actions/setup-python@v5
      - name: Update package list
        run: sudo apt-get update -y
      - name: Install OS packages
        # yamllint disable-line rule:line-length
        run: sudo apt-get install -y $(cat dependencies/debian.txt)
      - name: Remove externally managed python environment flag
        # yamllint disable-line rule:line-length
        run: sudo dpkg-divert --rename --add /usr/lib/$(py3versions -d)/EXTERNALLY-MANAGED
      - name: Install pip packages
        run: pip3 install $(cat dependencies/pip.txt)
      - uses: pre-commit/action@v3.0.1
        env:
          SPEC_VENDOR: Ben Grande
          SPEC_PACKAGER: Ben Grande <ben.grande.b@gmail.com>
          GIT_EMAIL: ben.grande.b@gmail.com
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - name: Run Editorconfig Checker
        run: |
          editorconfig-checker
          editorconfig-checker salt/dotfiles
      - name: Lint commit messages
        env:
          EVENT: ${{ github.event_name }}
          BASE: ${{ github.event.before }}
          HEAD: ${{ github.event.after }}
          PR_BASE: ${{ github.event.pull_request.base.sha }}
          PR_HEAD: ${{ github.event.pull_request.head.sha }}
        run: |
          if test "${EVENT}" = "pull_request"
          then
            base="${PR_BASE}"
            head="${PR_HEAD}"
          else
            base="${BASE}"
            head="${HEAD}"
          fi
          if test "${base}" = "${head}" || test -z "${base}"
          then
            gitlint --debug --commit "${head}"
          else
            gitlint --debug --commits "${base}..${head}"
          fi
      - name: Verify that commits have associated signatures
        env:
          EVENT: ${{ github.event_name }}
          BASE: ${{ github.event.before }}
          HEAD: ${{ github.event.after }}
        run: |
          if test "${EVENT}" = "pull_request"
          then
            exit 0
          fi
          base="${BASE}"
          head="${HEAD}"
          if test "${base}" = "${head}" || test -z "${base}"
          then
            scripts/commit-verify.sh "${head}"
          else
            scripts/commit-verify.sh $(git rev-list --reverse ${base}..${head})
          fi
